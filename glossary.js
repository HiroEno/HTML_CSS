// glossaryファイル HTML_CSS_Code
`use strict`
const glossary = [
{target:`DOTYPE宣言`, content:`使用したいHTMLのバージョンをブラウザに伝えるコード。`},
{target:`html要素`, content:`Webページのルート要素。headとbodyが入る。`},
{target:`head要素`, content:`Webページを表示するのにブラウザが必要とするデータ（metadata）が入る。`},
{target:`body要素`, content:`画面上に表示させたいすべてのデータが入る。`},
{target:`ブロック要素`, content:`画面上で要素は常に改行して始まり、使える幅いっぱいに広がる。`},
{target:`インライン要素`, content:`その中身が必要とする幅しかとらない。<br>要素は前の要素と同じ行の中で続く。`},
{target:`空要素`, content:`それだけで1つの要素を成し、コンテンツを持たない。`},
{target:`コンテンツ`, content:`開始タグと終了タグに囲まれる中身。`},
{target:`セレクタ`, content:`スタイルを適用する対象を指定し、プロパティと値で見た目を定義。<br>CSSではケバブケースを使用。基本的な種類としては、要素型、id、クラスなどがある。`},
{target:`要素型セレクタ`, content:`HTMLページ内のそのタイプの要素（タグ）すべてを指定。`},
{target:`idセレクタ`, content:`HTMLページ内で指定されたidをもつ要素を指定。<br>CSSファイル側で頭に'#'をつける。`},
{target:`クラスセレクタ`, content:`HTMLページ内で指定されたクラス名を持つ全ての要素を指定。<br>CSSファイル側で頭に'.'をつける。`},
{target:`ボックスモデル`, content:`Webページで各要素は四角い箱として表示。<br>箱にはコンテンツ、パディング、ボーダー、マージンの4つのエリアがある。`},
{target:`CSSレイアウトモード`, content:`ボックス（HTML要素）の位置やサイズを指定。`},
{target:`CSSプロパティ`, content:`HTML文書内の要素にスタイルやレイアウトを適用するために使用。`},
{target:`コンテンツ`, content:`Webページのテキストや画像など。`},
{target:`パディング`, content:`Webページのコンテンツと箱の境界の間隔。`},
{target:`ボーダー`, content:`Webページの箱の四周の境界線。<br>スタイル、幅、色の設定が可能。`},
{target:`マージン`, content:`Webページで要素の外側に追加される余白。<br>この余白により、要素が周りの要素との間に一定のスペースを持つことができる。`},
{target:`Flowレイアウト`, content:`デフォルトで特に指定しない。<br>HTMLファイルの中の順にしたがってブロック要素が上から下へ、インライン要素が右に流れる。`},
{target:`Flexboxレイアウト`, content:`効率よく要素を配置できるレイアウトモード。<br>配置を指定したい要素を含む親要素にflexboxを使うことを設定。そのあとさまざまなプロパティを使って配置を設定。displayで設定。`},
{target:`DOM ドキュメント オブジェクト モデル`, content:`HTMLオブジェクトのツリーのこと。<br>documentオブジェクトを介してJavaScriptでアクセスし変更を加えられる。`},
{target:`ツリー構造`, content:`HTMLドキュメントの各要素は、階層構造や親子関係、兄弟関係を持つ。`},
{target:`親要素`, content:`HTMLドキュメントの上位層の要素。`},
{target:`子要素`, content:`HTMLドキュメントの下位層の要素。`},
{target:`兄弟要素`, content:`HTMLドキュメントで同じ層にある要素。`},
{target:`ノード`, content:`ツリー構造やネットワークなどで、接続や階層構造の要素を指す。`},
{target:`documentオブジェクト`, content:`DOMツリーのルートを指す。<br>HTMLファイル全体に相当する。`},
{target:`window`, content:`DOM文書を収めるウィンドウを表す。`},
{target:`CSS（Cascading Style Sheets）`, content:`HTML要素にどんなスタイルをつけたいかを記述する言語。<br>DOM要素では、すべてのDOM要素のstyleプロパティの中にある。`},
{target:`CSSプロパティ`, content:`関連付けられた値によりブラウザーがどのように要素を表示するかを定義する特性。`},
{target:`イベント`, content:`ユーザーのインプットなど、ソフトウェアが認識する何らかのアクション。`},
{target:`イベントリスナー`, content:`イベントが発生したら行われる動きを記述した関数を仕組む。<br>イベントが発生したらその関数を呼び出し、関数が実行される。addEventlistener関数。`},
{target:`イベントオブジェクト`, content:`イベントリスナーに仕込んだ関数に渡す引数。`},
{target:`&lt;!DOCTYPE&gt;`, content:`HTML文書のバージョンと型を定義。<br>&lt;*** html&gt;`},
{target:`&lt;html&gt;`, content:`HTML文書全体を囲む。<br>&lt;*** lang='ja'&gt;`},
{target:`lang`, content:`言語を指定する属性。<br>&lt;html ***='ja'&gt;`},
{target:`&lt;meta&gt;`, content:`メタデータを指定。<br>&lt;*** charset='UTF-8'&gt;`},
{target:`charset`, content:`文字エンコーディングを指定する属性。<br>&lt;meta ***='UTF-8'&gt;`},
{target:`name`, content:`メタデータやコントロールの名前を指定する属性。<br>&lt;meta ***='viewport' content='width=device-width, initial-scale=1, shrink-to-fit=no'&gt;`},
{target:`content`, content:`name属性で指定されたメタタグの内容を指定する属性。<br> &lt;meta name='theme-color' ***='#000000'&gt;`},
{target:`&lt;link&gt;`, content:`外部リソースを読み込む。<br>&lt;*** rel='stylesheet' type='text/css' href='style.css'&gt;`},
{target:`rel`, content:`リンク先との関係を指定する属性。<br>&lt;link ***='stylesheet' href='styles.css'&gt;`},
{target:`&lt;a&gt;`, content:`ハイパーテキストをリンクするHTML要素。<br>href 属性を用いて、別のウェブページ、ファイル、メールアドレス、同一ページ内の場所、または他のURLへのハイパーリンクを作成。<br>&lt;*** href='https://example.com'&gt;Visit Example&lt;/***&gt; → example.comへ移動<br>&lt;*** href='#about'&gt;About&lt;/***&gt; → HP内の指定Idに移動<br>&lt;*** href='mailto:test@example.com?subject=お問い合わせ&body=本文記載'&gt;Email&lt;/***&gt; → mailソフトを起動、タイトルに'お問い合わせ'、本文に'本文記載'を記入<br>&lt;*** href='tel:+123456789'&gt;Phone&lt;/***&gt; → 電話<br>&lt;*** href='file:///path/to/file.txt'&gt;Open Local File&lt;/***&gt; → ファイルにアクセル<br><br>&lt;*** href='https://example.com'&gt;<br>&emsp;&lt;img src='example.jpg' alt=''&gt;<br>&lt;/***&gt; → 挟み込むことで画像クリックでリンクに移動<br><br>&lt;*** href='https://www.instagram.com/' target='_self'&gt;INSTAGRAM&lt;/***&gt; → instagramを現在のブラウザウィンドウやフレームで開く<br>&lt;*** href='https://twitter.com/' target='_blank'&gt;TWITTER&lt;/***&gt; → twitterを新しいブラウザウィンドウやタブで開く<br>&lt;*** href='https://www.facebook.com/' target='_blank'&gt;FACEBOOK&lt;/***&gt; → facebookを新しいブラウザウィンドウやタブで開く`},
{target:`href`, content:`ハイパーリンク先を指定する属性。<br>&lt;a ***='https://example.com'&gt;Visit Example&lt;/a&gt; → example.comへ移動<br>&lt;a ***='#about'&gt;About&lt;/a&gt; → HP内の指定Idに移動<br>&lt;a ***='mailto:test@example.com?subject=お問い合わせ&body=本文記載'&gt;Email&lt;/a&gt; → mailソフトを起動、タイトルに'お問い合わせ'、本文に'本文記載'を記入<br>&lt;a ***='tel:+123456789'&gt;Phone&lt;/a&gt; → 電話<br>&lt;a ***='file:///path/to/file.txt'&gt;Open Local File&lt;/a&gt; → ファイルにアクセル<br><br>&lt;a ***='https://example.com'&gt;<br>&emsp;&lt;img src='example.jpg' alt=''&gt;<br>&lt;/a&gt; → 挟み込むことで画像クリックでリンクに移動<br><br>&lt;a ***='https://www.instagram.com/' target='_self'&gt;INSTAGRAM&lt;/a&gt; → instagramを現在のブラウザウィンドウやフレームで開く<br>&lt;a ***='https://twitter.com/' target='_blank'&gt;TWITTER&lt;/a&gt; → twitterを新しいブラウザウィンドウやタブで開く<br>&lt;a ***='https://www.facebook.com/' target='_blank'&gt;FACEBOOK&lt;/a&gt; → facebookを新しいブラウザウィンドウやタブで開く`},
{target:`&lt;script&gt;`, content:`JavaScriptコードを挿入。<br>&lt;*** type='text/javascript' src='script.js'&gt;&lt;/***&gt;`},
{target:`defer`, content:`HTMLパース完了後、DOMContentLoadedイベントの直前にJavaScriptファイルを実行。<br>&lt;script type='text/javascript' src='script.js' ***&gt;&lt;/script&gt;`},
{target:`type`, content:`リンク先やスクリプトのタイプを指定する属性。<br>&lt;script ***='text/javascript' src='script.js'&gt;&lt;/script&gt;`},
{target:`&lt;title&gt;`, content:`ページのタイトルを指定。<br>&lt;***&gt;Document&lt;/***&gt;`},
{target:`&lt;body&gt;`, content:`ページの本文を含む。<br>&lt;***&gt;...&lt;/***&gt;`},
{target:`&lt;div&gt;`, content:`ブロック要素でコンテンツをグループ化。<br>&lt;*** class='container'&gt;...&lt;/***&gt;`},
{target:`&lt;h1&gt;～&lt;h6&gt;`, content:`見出しを定義。<br>&lt;***&gt;This is a Heading&lt;/***&gt;`},
{target:`&lt;p&gt;`, content:`段落を定義。<br>&lt;***&gt;This is a paragraph.&lt;/***&gt;`},
{target:`&lt;nav&gt;`, content:`ウェブページ内でユーザーがサイトを効果的に移動し、目的の情報にアクセスするのに役立つナビゲーションコンテンツを定義。<br>&lt;*** class='menu'&gt;<br>&emsp;&lt;ul&gt;<br>&emsp;&emsp;&lt;li&gt;&lt;a href='#home'&gt;Home&lt;/a&gt;&lt;/li&gt;<br>&emsp;&emsp;&lt;li&gt;&lt;a href='#about'&gt;About&lt;/a&gt;&lt;/li&gt;<br>&emsp;&emsp;&lt;li&gt;&lt;a href='#contact'&gt;Contact&lt;/a&gt;&lt;/li&gt;<br>&emsp;&lt;/ul&gt;<br>&lt;/***&gt;`},
{target:`&lt;ul&gt;`, content:`箇条書きリストを定義。<br>&lt;***&gt;<br>&emsp;&lt;li&gt;Item 1&lt;/li&gt;<br>&emsp;&lt;li&gt;Item 2&lt;button&gt;push&lt;/li&gt;<br>&lt;/***&gt;`},
{target:`&lt;ol&gt;`, content:`番号付きリストを定義。<br>&lt;***&gt;<br>&emsp;&lt;li&gt;Item 1&lt;/li&gt;<br>&emsp;&lt;li&gt;Item 2&lt;button&gt;push&lt;/li&gt;<br>&lt;/***&gt;`},
{target:`&lt;li&gt;`, content:`リストアイテムを定義。<br>&lt;ul&gt;<br>&emsp;&lt;***&gt;Item 1&lt;/***&gt;<br>&emsp;&lt;***&gt;Item 2&lt;button&gt;push&lt;/***&gt;<br>&lt;/ul&gt;`},
{target:`&lt;button&gt;`, content:`ボタンを定義。<br>&lt;*** onclick='myFunction()'&gt;Click me&lt;/***&gt;`},
{target:`&lt;em&gt;`, content:`強調を表す斜体のテキスト。<br>&lt;***&gt;This is emphasized text.&lt;/***&gt;`},
{target:`&lt;strong&gt;`, content:`強い強調を表す太字のテキスト。<br>&lt;***&gt;This is strong emphasized text.&lt;/***&gt;`},
{target:`&lt;span&gt;`, content:`スタイルやイベントのためのインライン要素。<br>&lt;*** style='color: red;'&gt;Red text&lt;/***&gt;<br>&lt;*** style='color: red;'&gt;Red text&lt;/***&gt;`},
{target:`style`, content:`要素のインラインスタイルをCSS Style Declarationオブジェクトの形で返すHTML Elementの読み取り専用プロパティ。<br>このオブジェクトは、その要素のインラインのstyle属性で定義されている属性に値が割り当てられ、その要素のすべてのスタイルプロパティのリストが入っている。スタイル宣言は、nullまたは空文字列を設定することでリセットできる。<br>&lt;body ***='font-weight:bold'&gt;<br>element.***.backgroundColor = 'red'<br>element.***.cssText = 'width: 300px; position: relative; top: 250px; left: 250px';`},
{target:`.cssText`, content:`CSS Style Sheetスタイルルールの実際のテキストを返すCSSRuleインターフェイスのプロパティ。<br>JavaScriptでCSS表記のままスタイルを指定できる。<br>element.style.*** = 'width: 300px; position: relative; top: 250px; left: 250px';`},
{target:`&lt;br&gt;`, content:`改行を挿入。<br>&lt;p&gt;First line&lt;***&gt;Second line&lt;/p&gt;`},
{target:`id`, content:`要素に一意の識別子を付与。<br>&lt;div ***='main-content'&gt;...&lt;/div&gt;`},
{target:`class`, content:`複数の要素に同じスタイルを適用するためのクラス。<br>スペースで区切ることで複数のクラスを指定可能。<br>&lt;p ***='highlight'&gt;This is highlighted text.&lt;/p&gt;<br>&lt;p ***='highlight wrapper'&gt;This is highlighted text and wrapper.&lt;/p&gt; → highlightとwrapperの2つのクラスを指定`},
{target:`&lt;select&gt;`, content:`ユーザーがドロップダウンメニューから選択できるオプションのリストを表示するために使用。<br>&lt;*** name='pets' id='pet-select'&gt;<br>&emsp;&lt;option value=''&gt;--Please choose an option--&lt;/option&gt;<br>&emsp;&lt;option value='dog'&gt;Dog&lt;/option&gt;<br>&emsp;&lt;option value='cat'&gt;Cat&lt;/option&gt;<br>&emsp;&lt;option value='hamster'&gt;Hamster&lt;/option&gt;<br>&lt;/***&gt;`},
{target:`name`, content:`入力欄コントロールの名前。<br>名前/値の組の部分としてフォームと一緒に送信される。<br>&lt;select ***='fruits'&gt;...&lt;/select&gt;`},
{target:`&lt;option&gt;`, content:`ドロップダウンリストの選択肢を定義。<br>&lt;*** value='pig'&gt;Pig&lt;/option&gt;`},
{target:`value`, content:`この選択肢が選択された場合に送信される値を指定。<br>&lt;option ***='horse'&gt;Horse&lt;/option&gt;`},
{target:`&lt;input&gt;`, content:`ユーザーからデータを受け取るための、ウェブベースのフォーム用の操作可能なコントロールを作成するためのHTML要素。<br>この要素の動作はtype属性の値に応じて大きく異なる。入力した値はvalueプロパティで取得。<br>&lt;*** type='text' id='name' name='name' placeholder='Enter your username' required minlength='4' maxlength='8' size='10' /&gt;<br>const inputText = document.getElementByTagName('***').value;`},
{target:`placeholder`, content:`ユーザーが入力するべき内容を示すプレースホルダーテキストを指定。<br>&lt;input type='text' ***='Enter your username'&gt;`},
{target:`required`, content:`論理属性であり、所有するフォームが送信される前に、ユーザーが入力欄の値を指定しなければならないことを示すinputの属性。`},
{target:`text`, content:`type属性で指定するinputの型の既定値。<br>単一行のテキスト入力欄。改行は自動的に入力値から取り除かれる。<br>&lt;input type='***' id='name' name='name' required minlength='4' maxlength='8' size='10' /&gt;`},
{target:`button`, content:`プッシュボタンで、既定の動作を持たず、value属性の値（既定では空）を表示するtype属性で指定するinputの型。<br>&lt;input class='styled' type='***' value='Add to favorites' /&gt;`},
{target:`checkbox`, content:`チェックボックスで、選択または未選択のうちひとつの値をとることができるtype属性で指定するinputの型。<br>&lt;fieldset&gt;<br>&emsp;&lt;legend&gt;選択肢:&lt;/legend&gt;<br>&emsp;&lt;div&gt;<br>&emsp;&emsp;&lt;input type='***' id='choice1' name='choice1' checked /&gt;<br>&emsp;&emsp;&lt;label for='choice1'&gt;選択肢1&lt;/label&gt;<br>&emsp;&lt;/div&gt;<br>&emsp;&lt;div&gt;<br>&emsp;&emsp;&lt;input type='***' id='choice2' name='choice2' /&gt;<br>&emsp;&emsp;&lt;label for='choice2'&gt;選択肢2&lt;/label&gt;<br>&emsp;&lt;/div&gt;<br>&lt;/fieldset&gt;`},
{target:`color`, content:`色を指定するためのコントロールのtype属性で指定するinputの型。<br>対応しているブラウザーでは、アクティブになったときにカラーピッカーが開く。<br>&lt;p&gt;カラー選択&lt;/p&gt;<br>&lt;div&gt;<br>&emsp;&lt;input type='***' id='head' name='red' value='#e66465' /&gt;<br>&emsp;&lt;label for='red'&gt;Red&lt;/label&gt;<br>&lt;/div&gt;<br>&lt;div&gt;<br>&emsp;&lt;input type='***' id='yellow' name='yellow' value='#f6b73c' /&gt;<br>&emsp;&lt;label for='yellow'&gt;Yellow&lt;/label&gt;<br>&lt;/div&gt;`},
{target:`date`, content:`日付（時刻を除いた年、月、日）を入力するためのコントロールのtype属性で指定するinputの型。<br>対応しているブラウザーでは、アクティブになったときに日付ピッカーまたは年月日の数値のホイールが開く。<br>&lt;input type='***' id='start' name='trip-start' value='2024-01-01' min='2024-01-01' max='2024-12-31' /&gt;`},
{target:`dateteime-local`, content:`タイムゾーン情報がない日付と時刻を入力するためのコントロールのtype属性で指定するinputの型。<br>対応しているブラウザーでは、アクティブになったときに日付ピッカーまたは日付および時刻部分の数値のホイールが開く。<br>&lt;input type='***' id='meeting-time' name='meeting-time' value='2024-01-01T00:00' min='2024-01-01T00:00' max='2024-12-31T23:59' /&gt;`},
{target:`email`, content:`ユーザーに一つのメールアドレス。<br>または、multiple属性が設定されていた場合は、メールアドレスのリストを入力および編集させるために使用するinput要素。電子メールアドレスを編集するための欄で、text入力欄のように見えるものの、対応しているブラウザーや動的なキーボードのある端末では、入力値を検証したり、関連するキーボードを表示する。<br>&lt;input type='***' id='email' pattern='.+&commat;example\.com' size='30' required /&gt;`},
{target:`file`, content:`ユーザーがファイルを選択するコントロールのtype属性で指定するinputの型。<br>accept属性を使用して、コントロールが選択することができるファイル形式を定義することができる。<br>&lt;form method='post' enctype='multipart/form-data'&gt;<br>&emsp;&lt;div&gt;<br>&emsp;&emsp;&lt;label for='file'&gt;アップロードするファイルを選択&lt;/label&gt;<br>&emsp;&emsp;&lt;input type='***' id='file' name='file' multiple /&gt; → accept='image/*,.pdf'ならimageファイルとpdfファイル<br>&emsp;&lt;/div&gt;<br>&emsp;&lt;div&gt;<br>&emsp;&emsp;&lt;button&gt;送信&lt;/button&gt;<br>&emsp;&lt;/div&gt;<br>&lt;/form&gt;`},
{target:`hidden`, content:`表示されないコントロールだが、その値はサーバーに送信されるtype属性で指定するinputの型。<br>隣の列には例がありますが、非表示。`},
{target:`image`, content:`テキストではなく画像の形をとる送信ボタンのためのtype属性で指定するinputの型。<br>src属性で定義された画像を表示。alt属性はsrcの画像が見つからないときに表示。<br>&lt;input type='***' id='image' alt='Login' src='/media/login.png' /&gt;`},
{target:`month`, content:`タイムゾーン情報がない年と月を入力するためのコントロールのtype属性で指定するinputの型。<br>&lt;input type='***' id='start' name='start' min='2024-01' value='2024-01' /&gt;`},
{target:`number`, content:`数値を入力するためのコントロールのtype属性で指定するinputの型。<br>スピナーを表示し、既定の検証を追加。動的キーボードを持つ一部の端末では、テンキーを表示。<br>&lt;input type='***' id='tentacles' name='tentacles' min='0' max='10' placeholder='1.0' step='0.01'/&gt;`},
{target:`password`, content:`入力値を隠す単一行テキストフィールドのtype属性で指定するinputの型。<br>サイトが安全ではない場合はユーザーに警告。<br>&lt;input type='***' id='pass' name='password' minlength='8' required /&gt;`},
{target:`radio`, content:`ラジオボタンのtype属性で指定するinputの型で、同じnameの値を持つ複数の選択肢から一つの値を選択することができる。<br>&lt;form&gt;<br>&emsp;&lt;fieldset&gt;<br>&emsp;&emsp;&lt;legend&gt;希望連絡方法&lt;/legend&gt;<br>&emsp;&emsp;&lt;div&gt;<br>&emsp;&emsp;&emsp;&lt;input type='***' id='Choice1' name='contact' value='email' /&gt;<br>&emsp;&emsp;&emsp;&lt;label for='Choice1'&gt;メール&lt;/label&gt;<br>&emsp;&emsp;&emsp;&lt;input type='***' id='Choice2' name='contact' value='phone' /&gt;<br>&emsp;&emsp;&emsp;&lt;label for='Choice2'&gt;電話&lt;/label&gt;<br>&emsp;&emsp;&emsp;&lt;input type='***' id='Choice3' name='contact' value='mail' /&gt;<br>&emsp;&emsp;&emsp;&lt;label for='Choice3'&gt;郵便&lt;/label&gt;<br>&emsp;&emsp;&lt;/div&gt;<br>&emsp;&emsp;&lt;div&gt;<br>&emsp;&emsp;&emsp;&lt;button type='submit'&gt;送信&lt;/button&gt;<br>&emsp;&emsp;&lt;/div&gt;<br>&emsp;&lt;/fieldset&gt;<br>&lt;/form&gt;`},
{target:`range`, content:`厳密な値であることが重要ではない数値を入力するためのコントロールのtype属性で指定するinputの型。<br>範囲のウィジェットを表示し、既定では中央の値。minとmaxの組み合わせで、受け入れる値の範囲を定義することができる。<br>&lt;div&gt;<br>&emsp;&lt;input type='***' id='volume' name='volume' min='0' max='11' /&gt;<br>&emsp;&lt;label for='volume'&gt;Volume&lt;/label&gt;<br>&lt;/div&gt;`},
{target:`search`, content:`ユーザーが検索クエリを入力するために設計されたテキスト入力欄のtype属性で指定するinputの型。<br>改行は自動的に取り除かれる。value属性は、テキスト入力欄に入力された現在のテキストの値が入っている文字列。プロパティを使ってこれを受け取ることができる。qは検索入力に与えられる最も一般的なnameで送信するとサーバーに送信されるデータの名前と値の組は q=searchtermとなる。<br>&lt;input type='***' id='mySearch' name='q' /&gt;<br>&lt;button&gt;Search&lt;/button&gt;<br>searchTerms = mySearch.value;`},
{target:`submit`, content:`フォームを送信するボタンのtype属性で指定するinputの型。<br>value属性は、ボタンのラベルとして表示される文字列を示し、ボタンはその他の真の値を持たない。<br>&lt;input type='***' value='リクエストを送信' /&gt;`},
{target:`tel`, content:`電話番号を入力するためのコントロールのtype属性で指定するinputの型。<br>動的なテンキーを備えた一部の機器では、電話用のテンキーを表示。<br>&lt;input type='***' id='phone' name='phone' pattern='[0-9]{3}-[0-9]{3}-[0-9]{4}' required /&gt;`},
{target:`time`, content:`タイムゾーン情報がない時刻を入力するためのコントロールのtype属性で指定するinputの型。<br>&lt;input type='***' id='appt' name='appt' min='09:00' max='18:00' required /&gt;`},
{target:`url`, content:`URLを入力するための入力欄のtype属性で指定するinputの型。<br>text入力欄のように見えますが、対応しているブラウザーや動的なキーボードのある端末では、入力値を検証したり、関連するキーボードを表示。<br>&lt;input type='***' name='url' id='url' placeholder='https://example.com' pattern='https://.*' size='30' required /&gt;`},
{target:`week`, content:`年と週番号で構成される日付を入力するためのコントロールのtype属性で指定するinputの型。<br>週番号はタイムゾーンを伴わない。<br>&lt;input type='week' name='week' id='camp-week' min='2024-W18' max='2024-W26' required /&gt;`},
{target:`&lt;marquee&gt;`, content:`テキストや画像をスクロールさせるための要素。<br>&lt;*** behavior='scroll' direction='left' loop='3' scrollamount='5'&gt;Scrolling Text&lt;/***&gt;`},
{target:`behavior`, content:`スクロールの振る舞いを指定。<br>'alternate'を指定すると、要素がスクロールしたり戻ったりを繰り返す。<br>&lt;marquee ***='alternate'&gt;...&lt;/marquee&gt;`},
{target:`direction`, content:`スクロールの方向を指定。<br>'up'を指定すると、テキストが上に向かってスクロール。<br>&lt;marquee ***='up'&gt;...&lt;/marquee&gt;`},
{target:`loop`, content:`スクロールのループ回数を指定。<br>&lt;marquee ***='3'&gt;...&lt;/marquee&gt;`},
{target:`scrollamount`, content:`1回のスクロールの速さを指定。<br>&lt;marquee ***='5'&gt;...&lt;/marquee&gt;`},
{target:`&lt;hr&gt;`, content:`水平の罫線。<br>&lt;***&gt;`},
{target:`&lt;article&gt;`, content:`記事やコンテンツのセクションを定義。<br>&lt;***&gt;<br>&emsp;&lt;h2&gt;Article Title&lt;/h2&gt;<br>&emsp;&lt;p&gt;Article content...&lt;/p&gt;<br>&lt;/***&gt;`},
{target:`&lt;pre&gt;`, content:`整形済みテキスト (preformatted text) を表す。<br>この要素内のテキストは一般的に、ファイル内でのレイアウトをそのまま反映して等幅フォントで表示する。<br>&lt;***&gt;...&lt;/***&gt;`},
{target:`&lt;time&gt;`, content:`特定の時の区間を表す。<br>datetime属性を使用して、機械可読な形式の日付を記述することができ、検索エンジンの結果を改善したりリマインダーなどの独自機能に使用できる。<br>&lt;*** datetime='2022-01-04'&gt;...&lt;/time&gt;`},
{target:`&lt;img&gt;`, content:`画像を表示。<br>&lt;*** src='image.jpg' alt='Description'&gt;`},
{target:`alt`, content:`&lt;img&gt; 要素で指定された画像が読み込まれない場合に表示する予備（代替）テキストを指定。<br>&lt;img src='image.jpg' ***='Description'&gt;`},
{target:`&lt;picture&gt;`, content:`様々な画面や端末の条件に応じた画像を提供するHTML要素。<br>0 個以上のsource要素と1つのimg要素を含む。ブラウザーは複数のsource子要素を検討し、その中から最も適切なものを選択。適切なものがない場合や、ブラウザーがこの要素に対応してない場合、img要素のsrc属性で指定されたURLが選択される。<br>&lt;***&gt;<br>&emsp;&lt;source media='(max-width: 600px)' srcset='img1.jpg'&gt; → max-widthが600pxの場合（スマートフォンなど）画像表示<br>&emsp;&lt;img src='img2.jpg' alt=''&gt; → 条件に一致しない場合表示<br>&lt;/***&gt;`},
{target:`source`, content:`picture、audio、videoの各要素に対し、複数のメディアリソースを指定するHTML要素。<br>&emsp;&lt;*** media='(max-width: 600px)' srcset='img1.jpg'&gt; → max-widthが600pxの場合（スマートフォンなど）画像表示`},
{target:`media`, content:`ユーザーエージェントがそれぞれのsource要素を評価するメディア条件を（メディアクエリーと同様に）指定するHTML要素pictureのsource要素の属性。<br>&lt;source ***='(max-width: 600px)' srcset='img1.jpg'&gt; → max-widthが600pxの場合（スマートフォンなど）画像表示`},
{target:`srcset`, content:`寸法に基づいた利用可能な画像のリストを提供するために使用するHTML要素pictureのsource要素の属性。<br>&emsp;&lt;source media='(max-width: 600px)' ***='img1.jpg'&gt; → max-widthが600pxの場合（スマートフォンなど）画像表示`},
{target:`&lt;iframe&gt;`, content:`入れ子になった閲覧コンテキストを表現し、現在のHTMLページに他のページを埋め込むことができるHTML要素。<br>src属性で埋め込むコンテンツのURL、width属性とheight属性で埋め込まれたコンテンツの幅と高さ、allowfullscreen属性でフルスクリーン表示を許可を指定。loading属性でブラウザがコンテンツを読み込む方法を指定し、lazy値は、コンテンツが必要になるまで読み込まない。style属性はインラインCSSスタイルが含まれ、border:0;では周囲に枠線が表示されない。<br>&lt;*** src='https://www.********' width='600' height='450' style='border:0;' allowfullscreen='true' loading='lazy'&gt;&lt;/***&gt;`},
{target:`&lt;audio&gt;`, content:`音声コンテンツを再生するための要素。<br>&lt;*** controls&gt;<br>&emsp;&lt;source src='audio.mp3' type='audio/mp3'&gt;<br>&lt;/***&gt;`},
{target:`controls`, content:`ブラウザに再生コントロール（再生、一時停止、音量調整など）を表示するよう指示する属性。<br>&lt;audio ***&gt;<br>&emsp;&lt;source src='audio.mp3' type='audio/mp3'&gt;<br>&lt;/audio&gt;`},
{target:`&lt;video&gt;`, content:`動画や映像を表示するための要素。<br>&lt;*** width='320' height='240' controls&gt;<br>&emsp;&lt;source src='movie.mp4' type='video/mp4'&gt;<br>&lt;/***&gt;<br>&lt;*** id='video' src='video.mp4' loop autoplay muted playsinline&gt;&lt;/***&gt; → 自動再生、ループ再生、音声ミュートで背景として表示`},
{target:`autoplay`, content:`ページが読み込まれた際にビデオを自動再生。<br>&lt;video ***&gt;<br>&emsp;&lt;source src='movie.mp4' type='video/mp4'&gt;<br>&lt;/video&gt;`},
{target:`loop`, content:`ビデオをループ再生するための属性。<br>ビデオの再生が終了した際に、自動的に最初から再生を繰り返す。<br>&lt;video id='video' src='video.mp4' *** autoplay muted playsinline&gt;&lt;/video&gt; → 自動再生、ループ再生、音声ミュートで背景として表示`},
{target:`muted`, content:`動画をミュートにするか指定。<br>&lt;video ***&gt;<br>&emsp;&lt;source src='movie.mp4' type='video/mp4'&gt;<br>&lt;/video&gt;`},
{target:`playsinline`, content:`インライン再生を許可するための属性。<br>モバイルデバイスの場合、ビデオが自動的にフルスクリーンで再生されるのを防ぐ。<br>&lt;video id='video' src='video.mp4' loop autoplay muted ***&gt;&lt;/video&gt; → 自動再生、ループ再生、音声ミュートで背景として表示`},
{target:`&lt;dl&gt;`, content:`HTMLの要素で説明リストを表す。<br>一連の用語&lt;dt&gt;と説明&lt;dd&gt;をリスト化したもの。一般的な使用例として、用語集の作成やメタデータ（キーと値のペアのリスト）の表示など。<br>&lt;***&gt;<br>&emsp;&lt;dt&gt;著者&lt;/dt&gt;<br>&emsp;&lt;dd&gt;著者内容&lt;/dd&gt;<br>&emsp;&lt;dt&gt;出版社&lt;/dt&gt;<br>&emsp;&lt;dd&gt;出版社内容&lt;/dd&gt;<br>&lt;/***&gt;<br><br>*** {<br>&emsp;display: flex; → dt、ddを横並びにする<br>&emsp;flex-wrap: wrap; → dtとddが100%になったら、横並びを折り返す<br>}`},
{target:`&lt;dt&gt;`, content:`HTMLの要素で、説明または定義リストの中で用語を表す部分であり、&lt;dl&gt;の子要素としてのみ用いることができる。<br>普通は&lt;dd&gt;要素が続く。複数の要素が続くと、すぐ後に続く&lt;dd&gt;要素で定義されていることを表す。後に続く&lt;dd&gt;（詳細説明）要素は、指定した用語について、定義やその他の関連する文字列を表す。<br>&lt;dl&gt;<br>&emsp;&lt;***&gt;著者&lt;/***&gt;<br>&emsp;&lt;dd&gt;著者内容&lt;/dd&gt;<br>&emsp;&lt;***&gt;出版社&lt;/***&gt;<br>&emsp;&lt;dd&gt;出版社内容&lt;/dd&gt;<br>&lt;/dl&gt;<br><br>dl {<br>&emsp;display: flex; → ***、ddを横並びにする<br>&emsp;flex-wrap: wrap; → ***とddが100%になったら、横並びを折り返す<br>}`},
{target:`&lt;dd&gt;`, content:`HTMLの要素で、説明リスト要素&lt;dl&gt;内で、その前の用語&lt;dt&gt;の説明、定義、値などを示す。<br>&lt;dl&gt;<br>&emsp;&lt;dt&gt;著者&lt;/dt&gt;<br>&emsp;&lt;***&gt;著者内容&lt;/***&gt;<br>&emsp;&lt;dt&gt;出版社&lt;/dt&gt;<br>&emsp;&lt;***&gt;出版社内容&lt;/***&gt;<br>&lt;/dl&gt;<br><br>dl {<br>&emsp;display: flex; → dt、***を横並びにする<br>&emsp;flex-wrap: wrap; → dtと***が100%になったら、横並びを折り返す<br>}`},
{target:`flex-wrap`, content:`フレックスアイテムを単一行に押し込むか、あるいは複数行に折り返してもよいかを指定するCSSプロパティ。<br>折り返しを許可する場合は、行を積み重ねる方向の制御も可能。<br>***: nowrap → フレックスアイテムは単一行に配置<br>***: wrap → フレックスアイテムは複数行に分割<br>***: wrap-reverse → フレックスアイテムは複数行に逆順で分割`},
{target:`&lt;form&gt;`, content:`ウェブサーバーに情報を送信するための対話型コントロールを含む文書の区間を表す。<br>nameは空文字列であってはならず、フォームコレクションに含まれるこの要素がある場合は、その中で一意でなければならない。<br>&lt;*** action='save_data.php' method='post' class='form-example'&gt;<br>&emsp;&lt;div class='form-example'&gt;<br>&emsp;&emsp;&lt;label for='name'&gt;Enter your name: &lt;/label&gt;<br>&emsp;&emsp;&lt;input type='text' name='name' id='name' required /&gt;<br>&emsp;&lt;/div&gt;<br>&emsp;&lt;div class='form-example'&gt;<br>&emsp;&emsp;&lt;label for='email'&gt;Enter your email: &lt;/label&gt;<br>&emsp;&emsp;&lt;input type='email' name='email' id='email' required /&gt;<br>&emsp;&lt;/div&gt;<br>&emsp;&lt;div class='form-example'&gt;<br>&emsp;&emsp;&lt;input type='submit' value='Subscribe!' /&gt;<br>&emsp;&lt;/div&gt;<br>&lt;/***&gt;`},
{target:`action`, content:`フォーム経由で送信された情報を処理するプログラムのURL。<br>&lt;form ***='save_data.php' method='post' class='form-example'&gt;`},
{target:`method`, content:`フォームを送信する際にブラウザーが使用するHTTPメソッド。<br>postを指定することでフォームのデータはリクエスト本体として送信。getを指定することでフォームのデータはaction属性のURLに?で区切って追加される。<br>&lt;form action='save_data.php' ***='post' class='form-example'&gt;`},
{target:`&lt;label&gt;`, content:`フォームコントロールに関連するテキストを表示するために使用。<br>&lt;*** for='username'&gt;Username:&lt;/***&gt;<br>&lt;input type='text' id='username' name='username'&gt;`},
{target:`for`, content:`関連付ける入力フィールドのIDを指定。<br>&lt;label ***='username'&gt;Username:&lt;/label&gt;<br>&lt;input type='text' id='username' name='username'&gt;`},
{target:`&lt;table&gt;`, content:`表形式のデータ、行と列の組み合わせによるセルに含まれたデータによる二次元の表のHTML要素。<br>&lt;table&gt;<br>&emsp;&lt;caption&gt;<br>&emsp;&emsp;タイトル<br>&emsp;&lt;/caption&gt;<br>&emsp;&lt;thead&gt;<br>&emsp;&emsp;&lt;tr&gt;<br>&emsp;&emsp;&emsp;&lt;th scope='col'&gt;名前&lt;/th&gt;<br>&emsp;&emsp;&emsp;&lt;th scope='col'&gt;職種&lt;/th&gt;<br>&emsp;&emsp;&emsp;&lt;th scope='col'&gt;年齢&lt;/th&gt;<br>&emsp;&emsp;&lt;/tr&gt;<br>&emsp;&lt;/thead&gt;<br>&emsp;&lt;tbody&gt;<br>&emsp;&emsp;&lt;tr&gt;<br>&emsp;&emsp;&emsp;&lt;th scope='row'&gt;田中&lt;/th&gt;<br>&emsp;&emsp;&emsp;&lt;td&gt;設計士&lt;/td&gt;<br>&emsp;&emsp;&emsp;&lt;td&gt;34&lt;/td&gt;<br>&emsp;&emsp;&lt;/tr&gt;<br>&emsp;&emsp;&lt;tr&gt;<br>&emsp;&emsp;&emsp;&lt;th scope='row'&gt;木村&lt;/th&gt;<br>&emsp;&emsp;&emsp;&lt;td&gt;プログラマー&lt;/td&gt;<br>&emsp;&emsp;&emsp;&lt;td&gt;26&lt;/td&gt;<br>&emsp;&emsp;&lt;/tr&gt;<br>&emsp;&emsp;&lt;tr&gt;<br>&emsp;&emsp;&emsp;&lt;th scope='row'&gt;井上&lt;/th&gt;<br>&emsp;&emsp;&emsp;&lt;td&gt;会社員&lt;/td&gt;<br>&emsp;&emsp;&emsp;&lt;td&gt;30&lt;/td&gt;<br>&emsp;&emsp;&lt;/tr&gt;<br>&emsp;&lt;/tbody&gt;<br>&emsp;&lt;tfoot&gt;<br>&emsp;&emsp;&lt;tr&gt;<br>&emsp;&emsp;&emsp;&lt;th scope='row' colspan='2'&gt;平均年齢&lt;/th&gt;<br>&emsp;&emsp;&emsp;&lt;td&gt;30&lt;/td&gt;<br>&emsp;&emsp;&lt;/tr&gt;<br>&emsp;&lt;/tfoot&gt;<br>&lt;/table&gt;`},
{target:`&lt;caption&gt;`, content:`表のタイトルを指定するHTML要素。`},
{target:`&lt;thead&gt;`, content:`表のヘッダーを指定するHTML要素。`},
{target:`&lt;tbody&gt;`, content:`表の本体部分を指定するHTML要素。`},
{target:`&lt;tfoot&gt;`, content:`表のフッターを指定するHTML要素。`},
{target:`&lt;tr&gt;`, content:`表の1つの行を指定するHTML要素（Table Row）。`},
{target:`&lt;th&gt;`, content:`表の内のヘッダーセル（見出しセル）を指定するHTML要素（Table Header Cell）。<br>scope='col'はヘッダーセルが列の見出し、scope='row'はヘッダーセルが行の見出し、colspan='2'は横方向にいくつの列を結合するかを指定（ここでは2列）`},
{target:`&lt;td&gt;`, content:`表の内のデータセルを指定するHTML要素（Table Data Cell）。`},
{target:`&lt;aside&gt;`, content:`文書のメインコンテンツと間接的な関係しか持っていない文書の部分を表現するHTML要素。<br>サイドバーやコールアウトボックスなどを表現するのに使われる。<br>&lt;*** id='sidebar'&gt;&lt;/***&gt;<br>&lt;***&gt;<br>&emsp;&lt;p&gt;side&lt;/p&gt;<br>&lt;/***&gt;`},
{target:`& nbsp;`, content:`半角スペースを挿入（使用時スペース除く）。<br>&lt;p&gt;This is***some text.&lt;/p&gt;`},
{target:`& ensp;`, content:`通常のスペースとは異なり、幅が広いスペースを挿入（使用時スペース除く）。<br>&lt;p&gt;This is***some text.&lt;/p&gt;`},
{target:`& emsp;`, content:`通常のスペースとは異なり、半角2倍のスペースを挿入（使用時スペース除く）。<br>&lt;p&gt;This is***some text.&lt;/p&gt;`},
{target:`& nbsp;`, content:`ノーブレークスペース（前後で自動改行しないスペース）(使用時スペース除く)。<br>&lt;p&gt;This is***some text.&lt;/p&gt;`},
{target:`& lt;`, content:`小なり記号（<, 使用時スペース除く）。`},
{target:`& gt;`, content:`大なり記号（>, 使用時スペース除く）。`},
{target:`& copy;`, content:`コピーライト記号（@, 使用時スペース除く）。`},
{target:`& quot;`, content:`ダブルクオート（使用時スペース除く）。`},
{target:`color`, content:`テキストの色を指定するCSSプロパティ。<br>***: red;`},
{target:`background-color`, content:`背景色を指定するCSSプロパティ。<br>***: red;`},
{target:`font-size`, content:`フォントのサイズを指定するCSSプロパティ。<br>***: 10px;`},
{target:`width`, content:`要素の幅を指定するCSSプロパティ。<br>***: 200px;<br>display: flex;<br>***: calc(100%/3); → 値が3等分になるよう計算<br>***: 90vw; → ビューポート幅（画面幅）の90%`},
{target:`auto`, content:`自動サイズ調整のCSS値。<br>width: ***;`},
{target:`fit-content`, content:`利用可能な空間に対してfit-content式を使用し、指定された引数に置き換えるCSS値。<br>width: ***;`},
{target:`calc`, content:`CSSのプロパティ値を指定する際に計算を行うことができるCSS関数。<br>width: ***(50% - 10px);<br>width: ***(100%/3); → widthの値が3等分になるよう計算`},
{target:`height`, content:`要素の高さを指定するCSSプロパティ。<br>***: 200px;`},
{target:`font-family`, content:`フォントの種類を指定するCSSプロパティ。<br>選択した要素に対して、フォントファミリー名や総称ファミリー名の優先順位リストを指定することができる。<br>***: Arial',sans-serif; → 'Arial' フォントまたはサンセリフフォントを指定<br>***: 'Arial', 'Helvetica', sans-serif;`},
{target:`border`, content:`要素の境界線（ボーダー）のスタイル、太さ、色を指定するCSSプロパティ。<br>***: solid;`},
{target:`padding`, content:`要素の内側の余白を指定するCSSプロパティ。<br>***: 10px 50px 20px;`},
{target:`margin`, content:`要素の外側の余白を指定するCSSプロパティ。<br>autoはブラウザーが適切なマージンを選択して使用し要素を中央揃えにする。<br>***: 10px 50px 20px 0;<br>***: 0 auto → 上は余白 0、左右はauto`},
{target:`display`, content:`HTML要素の表示を設定。<br>noneは最初から無かったかのように要素を隠し、次の要素が繰り上がるCSSプロパティ。<br>***: none;&emsp;***: inline;`},
{target:`flex`, content:`要素は、ブロック要素のように動作しつつ、そのコンテンツをフレックスボックスモデルに従ってレイアウトするCSS値。<br>水平方向に並ぶ。<br>display: ***;`},
{target:`grid`, content:`要素は、ブロックレベル要素のように動作しつつ、そのコンテンツをグリッドモデルに従ってレイアウトするCSS値。<br>垂直方向に並ぶ。<br>display: ***;`},
{target:`block`, content:`要素は、この要素はブロックボックスを生成し、通常のフローでは要素の前後で改行を生成するCSS値。<br>display: ***;`},
{target:`inline`, content:`要素は、ブロック要素のように動作しつつ、そのコンテンツをフレックスボックスモデルに従ってレイアウトするCSS値。<br>display: ***;`},
{target:`inline-block`, content:`ブロック要素ボックスを生成するが、周囲のコンテンツに対しては単一のインラインボックスであるかのように振る舞うCSS値。<br>幅と高さを持たせることができる。<br>display: ***;`},
{target:`inline-flex`, content:`インライン要素のようにふるまいつつ、その内容物をフレックスボックスモデルに従ってレイアウトするCSS値。<br>display: ***;`},
{target:`none`, content:`表示を無くし、レイアウトに影響を与えなくなるCSS値。<br>display: ***;`},
{target:`table`, content:`要素をテーブルとして表示するCSS値。<br>display: ***; → テーブルとして表示される要素のブロック化<br>margin: 0 auto; → 左右のマージンの自動設定`},
{target:`float`, content:`HTML要素を左や右に配置。<br>また、flowから外れ、この要素が最初からなかったかのように次の要素が配置。次の要素に含まれるテキストなどインラインのコンテンツは回り込むCSSプロパティ。<br>***: right;`},
{target:`clear`, content:`HTML要素を左や右に配置。<br>テキストの回り込みを避けたい場合に設定するCSSプロパティ。<br>***: none;&emsp;***: left;`},
{target:`position`, content:`HTML要素を、relativeはflowの場所から指定された距離だけずらす。<br>abusoluteは指定された一番近い親要素もしくはwindowの端から指定の距離だけ離れた位置に配置。fixedはwindowに対して指定の場所に要素を固定し、スクロールしても要素は動かない。stickyのある要素はwindowの端にくるとfixedになる。Staticは要素をデフォルトのflow layoutに従わせるCSSプロパティ。<br>***: relative;&emsp;***: absolute;`},
{target:`absolute`, content:`絶対位置指定。<br>要素は文書の通常のフローから除外され、ページレイアウト内にこの要素のための空間が作成されないCSS値。<br>position: ***;`},
{target:`fixed`, content:`固定位置指定。<br>要素は文書の通常のフローから除外され、ページレイアウト内に要素のための空間が作成されないCSS値。<br>position: ***;`},
{target:`relative`, content:`相対位置指定。<br>要素は文書の通常のフローに従って配置され、top、right、bottom、leftの値に基づいて自分自身からの相対オフセットで配置するCSS値。<br>position: ***;`},
{target:`sticky`, content:`固定位置指定（親基準）。<br>要素は文書の通常のフローに従って配置され、直近のスクロールする祖先および包含ブロック（直近のブロックレベル祖先、表関連要素を含む）に対してtop、right、bottom、leftの値に基づいて相対配置するCSS値。<br>position: ***;`},
{target:`flex-direction`, content:`フレックスコンテナ内のアイテムの配置方向を指定するCSSプロパティ。<br>***: row; → 水平方向に配置<br>***: row-reverse; → 水平方向逆順に配置<br>***: column; → 垂直方向に配置<br>***: column-reverse; → 垂直方向逆順に配置`},
{target:`row`, content:`フレックスレイアウトを水平方向に配置するCSS値。<br>flex-direction: ***;`},
{target:`column`, content:`フレックスレイアウトを垂直方向に配置するCSS値。<br>flex-direction: ***;`},
{target:`justify-content`, content:`フレックスコンテナーの主軸およびグリッドコンテナーのインライン軸に沿って、中身のアイテムの間や周囲に間隔を配置する方法を定義するCSSプロパティ。<br>display: flex;<br>***: center; → アイテムを中央に寄せる<br>***: start; → アイテムを先頭に寄せる<br>***: space-between; → 各アイテムを均等に配置し最初のアイテムは先頭に寄せ最後のアイテムは末尾に寄せる<br>***: space-around; → 各アイテムを均等に配置し各アイテムの両側に半分の大きさの間隔を置く<br>***: space-evenly; → 各アイテムを均等に配置し各アイテムの周りに同じ大きさの間隔を置く<br>***: stretch → 各アイテムを均等に配置しサイズがautoであるアイテムはコンテナーに合わせて引き伸ばす`},
{target:`start`, content:`アイテムを先頭に寄せるCSS値。<br>display: flex<br>justify-content: ***;`},
{target:`end`, content:`アイテムを末尾に寄せるCSS値。<br>display: flex<br>justify-content: ***;`},
{target:`flex-start`, content:`フレックスアイテムを先頭に寄せるCSS値。<br>display: flex<br>justify-content: ***;`},
{target:`flex-end`, content:`フレックスアイテムを末尾に寄せるCSS値。<br>display: flex<br>justify-content: ***;`},
{target:`flew-shrink`, content:`フレックスアイテムの縮小係数を設定するCSSプロパティ。<br>すべてのフレックスアイテムの寸法がフレックスコンテナーよりも大きい場合、アイテムは数値に従い縮小して収まる。<br>***: 0; → 親コンテナが狭くなっても縮小しない<br>***: 1; → 親コンテナの余分なスペースが不足している場合に他のフレックスアイテムと同じ割合で縮小<br>***: 2; → 親コンテナの余分なスペースが不足している場合に他のフレックスアイテムの2倍縮小`},
{target:`space-between`, content:`各アイテムを均等に配置し最初のアイテムは先頭に寄せ最後のアイテムは末尾に寄せるCSS値。<br>display: flex<br>justify-content: ***;`},
{target:`space-around`, content:`各アイテムを均等に配置し各アイテムの両側に半分の大きさの間隔を置くCSS値。<br>display: flex<br>justify-content: ***;`},
{target:`space-evenly`, content:`各アイテムを均等に配置し各アイテムの周りに同じ大きさの間隔を置くCSS値。<br>display: flex<br>justify-content: ***;`},
{target:`stretch`, content:`各アイテムを均等に配置しサイズがautoであるアイテムはコンテナーに合わせて引き伸ばすCSS値。<br>display: flex<br>justify-content: ***;`},
{target:`align-items`, content:`すべての直接の子要素に集合としてフレックスアイテムの垂直方向の配置を指定するCSSプロパティ。<br>***: stretch; → アイテムのマージンボックスのcross-sizeが、幅や高さの制約の範囲内でラインと同じになるよう拡張<br>***: center; → アイテムを垂直中央に配置<br>***: start; → アイテムを先頭にまとめる<br>***: end; → アイテムを末尾にまとめる`},
{target:`vertical-align`, content:`インラインボックス、インラインブロック、表セルボックスの垂直方向の配置を設定するCSSプロパティ。<br>包含する行ボックスの中で、インライン要素のボックスの垂直方向の配置を決める場合と表のセルの内容の垂直方向の配置を決める場合に使用。<br>***: baseline; → 要素のベースラインを親要素のベースラインに揃える<br>***: top; → 要素と子孫要素の上端を行全体の上端に揃える<br>***: bottom; → 要素と子孫要素の下端を行全体の下端に揃える<br>***: middle; → 要素の中央を親要素の baseline + x-height の半分 に揃える<br>***: text-top; → 要素の上端を親要素のフォントの上端に揃える<br>***: sub; → 要素のベースラインを親要素の subscript-baseline に揃える`},
{target:`visibility`, content:`HTML要素の表示を設定するCSSプロパティ。<br>hiddenは要素は見えなくなるも、flowに存在しているため、次の要素は動かない。<br>***: visible;&emsp;***: hidden;&emsp;***: collapse;`},
{target:`visible`, content:`要素のボックスが可視になるCSS値。<br>visibility: ***;`},
{target:`hidden`, content:`要素のボックスは不可視になります (描画されない) が、レイアウトには通常通り影響するCSS値。<br>visibility: ***;`},
{target:`transform`, content:`要素の変形（位置、回転、スケールなど）を指定するCSSプロパティ。<br>***: rotate(0.5turn);&emsp;***: scale(2, 0.5);&emsp;***: scale(0.5) translate(-100%, -100%);`},
{target:`rotate`, content:`要素の回転指定のCSS値。<br>transform: ***(45deg);`},
{target:`translate`, content:`要素の位置を移動するCSS値。<br>transform: ***(10px, 20px);`},
{target:`translateX`, content:`X軸方向の位置移動するCSS値。<br>transform: ***(10px);`},
{target:`translateY`, content:`Y軸方向の位置移動するCSS値。<br>transform: ***(20px);`},
{target:`src`, content:`要素のソースのCSSプロパティ。<br>***: local(font);`},
{target:`opacity`, content:`要素の透明度を取得または設定するCSSプロパティ。<br>***: 90%;<br>#header li a:hover<br>&emsp;***: 0.7;<br>} → マウスホバーで透明度0.7に変更`},
{target:`appearance`, content:`オペレーティングシステムのテーマに基づいた、プラットフォーム固有のスタイル設定でUI要素を表示するために使用するCSSプロパティ。<br>***: auto; → ブラウザのデフォルトの外観を使用<br>***: menulist; → ドロップダウンリスト<br>***: menulist-box; → ドロップダウンメニューボックス<br>***: textfield → テキストフィールド<br>-moz-***: menulist; → Firefoxブラウザでドロップダウンリスト<br>-webkit-***: menulist; → WebKit系ブラウザ（ChromeやSafariなど）でドロップダウンリスト`},
{target:`background-image`, content:`背景に使用する画像を指定するCSSプロパティ。<br>***: url('image.jpg'); → 背景に 'image.jpg' 画像を表示`},
{target:`background-size`, content:`背景画像のサイズを指定するCSSプロパティ。<br>***: cover; → 背景画像を要素に合わせて表示`},
{target:`background-position`, content:`背景画像の初期位置を設定するCSSプロパティ。<br>位置はbackground-originで設定された位置レイヤーからの相対。<br>***: center; → 中央揃え<br>***: 25% 75% → X方向に25%、Y方向に75%の位置`},
{target:`background-repeat`, content:`背景画像をどのように繰り返すかを設定するCSSプロパティ。<br>***: repeat → 描画領域全体を覆うのに必要な回数だけ繰り返し描画<br>***: repeat-x; → X方向に必要な回数だけ繰り返し描画<br>***: repeat-y; → Y方向に必要な回数だけ繰り返し描画<br>***: no-repeat repeat → Y方向に必要な回数だけ繰り返し描画<br>***: no-repeat → 画像は繰り返し描画されない`},
{target:`background-attachment`, content:`背景画像の位置をビューポートの中で固定するか、包含ブロックと一緒にスクロールするかを設定するCSSプロパティ。<br>fixed：相対位置で固定。local：相対位置で固定。要素がスクロール機構を持っていた場合、背景画像は要素の内容とともにスクロール。scroll：背景は要素自身に対する相対位置で固定され、内容と共にスクロールしない。<br>***: scroll;<br>***: scroll, local;`},
{target:`cover`, content:`画像をコンテナーいっぱいにできるだけ大きく拡大縮小し、必要に応じて画像を引き伸ばす。<br>画像の比率が要素と異なる場合は、何もない空間が残らないように、上下または左右が切り取られるCSS値。<br>background-size: ***;`},
{target:`border-radius`, content:`ボーダーの角の半径を指定するCSSプロパティ。<br>50%を指定することで要素を円形にする。<br>***: 10px; → ボーダーの角を10pxの円で丸くする<br>***: 50%; → 要素を円形に指定`},
{target:`border-right`, content:`ボーダーの右側を指定するCSSプロパティ。<br>***: 1pxsolid#000; → ボーダーの右側を1pxの黒い実線に指定`},
{target:`border-top`, content:`ボーダーの上側を指定するCSSプロパティ。<br>***: 1pxsolid#000; → ボーダーの上側を1pxの黒い実線に指定`},
{target:`border-collapse`, content:`表の中のセルが境界を共有するか分離するかを設定するCSSプロパティ。<br>***: collapse; → 隣接するセルで境界線を共有<br>***: separate → 隣接するセルが個別に境界線を持つ`},
{target:`border-spacing`, content:`表における隣り合うセルの境界同士の間隔を定めるCSSプロパティ。<br>このプロパティはborder-collapseがseparateのときのみ適用。<br>***: 5px 1rem; → 水平方向の間隔を5ピクセル、垂直方向の間隔を1リモート（ルート要素のフォントサイズと同じ）<br>***: 1cm 2em; → 水平方向の間隔を1センチメートル、垂直方向の間隔を2エメットリックス（要素のフォントサイズの2倍）`},
{target:`border-color`, content:`要素の境界の色を設定するCSSプロパティ。<br>***: #000;<br>***: red yellow green transparent; → 上:赤 右:黄 下:緑 左: 透明`},
{target:`border-bottom`, content:`要素の下側の境界のプロパティをすべて設定するCSSプロパティ。<br>***: dashed red;`},
{target:`border-style`, content:`要素の境界線の 4 辺すべての線のスタイルを設定するCSSプロパティ。<br>***: dotted;`},
{target:`border-box`, content:`境界およびパディングを、要素に指定したwidthおよびheightの中で取るようブラウザーに指示するCSS値。<br>box-sizing: ***;`},
{target:`bottom`, content:`要素の下端位置を指定するCSSプロパティ。<br>***: 20px; → 要素の下端を20px下に配置`},
{target:`box-shadow`, content:`要素に影を付けるするCSSプロパティ。<br>***: 2px2px4px#000; → 要素に2px右下に4pxの黒い影を追加`},
{target:`box-sizing`, content:`ボックスモデルのサイズ計算方法を指定するCSSプロパティ。<br>***: border-box; → ボックスモデルにボーダーとパディングを含む`},
{target:`column-gap`, content:`列と列の間隔を指定するCSSプロパティ。<br>***: 20px; → 列と列の間隔を20pxに指定`},
{target:`cursor`, content:`マウスポインタの形状を指定するCSSプロパティ。<br>***: pointer; → マウスポインタをポインター形状に指定`},
{target:`pointer`, content:`マウスカーソル指定。ユーザーが（マウスなどの）ポインティングデバイスを持っているか、もしそうならば、主要なポインティングデバイスにどれだけの正確性があるかを調べるCSSメディア特性。<br>cursor: ***;`},
{target:`font-size`, content:`テキストのフォントサイズを指定するCSSプロパティ。<br>***: 16px; → テキストのフォントサイズを16pxに指定`},
{target:`large`, content:`大きいサイズ指定するCSS値。<br>font-size: ***;`},
{target:`font-weight`, content:`テキストの太さを指定するCSSプロパティ。<br>***: bold; → テキストの太さを太字に指定`},
{target:`bold`, content:`太字指定のCSS値。<br>font-weight: ***;`},
{target:`lighter`, content:`要素のフォントウェイトを軽くするCSS値。<br>font-weight: ***;`},
{target:`normal`, content:`標準のCSS値。<br>font-weight: ***;`},
{target:`letter-spacing`, content:`文字間のスペースを指定するCSSプロパティ。<br>***: 2px; → 文字間に2pxのスペースを設ける`},
{target:`writing-mode`, content:`テキストの行のレイアウトを横書きにするか縦書きにするか、ブロックのフロー方向を左向きにするか右向きにするかを設定するCSSプロパティ。<br>***: vertical-rl; → テキストは右から左に縦書き<br>***: vertical-lr; → テキストは左から右に縦書き`},
{target:`line-height`, content:`行の高さを指定するCSSプロパティ。<br>***: 1.5; → 行の高さをフォントサイズの1.5倍に指定`},
{target:`list-style`, content:`リストアイテムのマーカーのスタイルを指定するCSSプロパティ。<br>***: squareinside; → マーカーのスタイルを正方形に指定`},
{target:`margin-top`, content:`要素の上端からのマージンを指定するCSSプロパティ。<br>***: 10px; → 上端から10pxのマージンを設ける`},
{target:`max-height`, content:`要素の最大の高さを指定するCSSプロパティ。<br>***: 300px; → 要素の高さを最大300pxに制限`},
{target:`max-width`, content:`要素の最大の幅を指定するCSSプロパティ。<br>***: 500px; → 要素の幅を最大500pxに制限`},
{target:`object-fit`, content:`画像などの置換要素の表示方法を指定するCSSプロパティ。<br>***: cover; → 画像を要素に合わせて表示。高さを固定したまま画面幅に合わせて画像を伸縮させることができる`},
{target:`object-position`, content:`ボックス内における置換要素の中身の配置を指定するCSSプロパティ。<br>ボックスの領域内で置換要素のオブジェクトに覆われていない部分は、要素の背景が表示。<br>***: center top; → 水平方向は中央、垂直方向はトップに配置`},
{target:`overflow`, content:`要素のオーバーフローの挙動を指定するCSSプロパティ。<br>***: hidden; → 要素のオーバーフローを非表示にする`},
{target:`overflow-x`, content:`ブロックレベル要素の内容が左右の境界からあふれた場合、どのように表示するのかを設定するCSSプロパティ。<br>***: visible; → 内容は切り取られず外側に表示される可能性有り<br>***: hidden; → 内容を切り取る<br>***: scroll; → スクロールバーを表示 <br>***: auto; → パディングボックス内に収まる場合はvisible と同じように表示、内容があふれる場合はスクロールバーを表示`},
{target:`overflow-y`, content:`ブロックレベル要素の内容が上下の境界からあふれた場合、どのように表示するのかを設定するCSSプロパティ。<br>***: visible; → 内容は切り取られず外側に表示される可能性有り<br>***: hidden; → 内容を切り取る<br>***: scroll; → スクロールバーを表示 <br>***: auto; → パディングボックス内に収まる場合はvisible と同じように表示、内容があふれる場合はスクロールバーを表示`},
{target:`scale`, content:`変形（拡大縮小）のスケールを指定するCSSプロパティ。<br>***: scale(1.5); → 要素を1.5倍に拡大`},
{target:`scroll-behavior`, content:`スクロールの動作を指定するCSSプロパティ。<br>***: smooth; → スクロールを滑らかにする`},
{target:`text-align`, content:`テキストの水平方向の配置を指定するCSSプロパティ。<br>***: center; → テキストを中央に配置`},
{target:`center`, content:`中央揃えのCSS値。<br>text-align: ***;`},
{target:`left`, content:`左揃えのCSS値。<br>text-align: ***;`},
{target:`right`, content:`右揃えのCSS値。<br>text-align: ***;`},
{target:`text-decoration`, content:`テキストの装飾を指定するCSSプロパティ。<br>***: underline; → テキストに下線を追加<br>***: underline dotted red; → テキストに赤色の破線を追加<br>***: green wavy underline; → テキストに緑色の波線を追加`},
{target:`text-shadow`, content:`テキストに影を指定するCSSプロパティ。<br>***: 2px 2px #000; → テキストに2px右下に2pxの黒い影を追加`},
{target:`text-wrap`, content:`テキストの折り返し方法を指定するCSSプロパティ。<br>***: nowrap; → テキストを折り返さずに表示`},
{target:`top`, content:`要素の上端位置を指定するCSSプロパティ。<br>***: 20px; → 要素の上端を20px上に配置`},
{target:`transition`, content:`変化時のアニメーション効果を指定するCSSプロパティ。<br>***: opacity 0.5s ease-in-out; → 不透明度の変化を0.5秒かけてイージングで実行`},
{target:`transition-duration`, content:`トランジションによるアニメーションが完了するまでの所要時間を秒数またはミリ秒数で指定するCSSプロパティ。<br>既定値の0sはアニメーションを実行しないことを意味する。<br>***: 10s, 30s, 230ms;`},
{target:`transition-property`, content:`トランジション効果を適用するCSSプロパティを指定するCSSプロパティ。<br>***: all;<br>***: margin-right, color;`},
{target:`z-index`, content:`要素のスタッキングコンテキストの位置を指定するCSSプロパティ。<br>***: 3; → 要素のスタッキングコンテキストの位置を3に指定`},
{target:`background`, content:`色、画像、原点と寸法、反復方法など、背景に関するすべてのスタイルプロパティを一括で設定するCSSプロパティ。<br>***: #000;<br><br>#main { → 背景が左下に動くアニメーション<br>&emsp;background: url('img.jpeg') repeat;<br>&emsp;animation: fall 10s infinite linear;<br>}<br>@keyframes fall {<br>&emsp;0% {background-position: 0 0;}<br>&emsp;100% {background-position: -700px 700px;}<br>}`},
{target:`linear-gradient`, content:`二つ以上の色の連続的な直線に沿った変化から構成される画像を生成するCSS関数。<br>background: ***(#FFD700, #FF4500);`},
{target:`radial-gradient`, content:`二つ以上の色の連続的な推移が原点から放射状に広がる画像を生成するCSS関数。<br>background: ***(#e66465, #9198e5);<br>background: ***(closest-side, #3f87a6, #ebf8e1, #f69d3c);<br>background: ***(circle at 100%, #333, #333 50%, #eee 75%, #333 75%);<br><br>background: ***(ellipse at top, #e66465, transparent),<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;***(ellipse at bottom, #4d9f0c, transparent);`},
{target:`url`, content:`リンク先URL指定するCSS関数。<br>background: ***('image.jpg');`},
{target:`transparent`, content:`透明色のCSS値。<br>background-color: ***;`},
{target:`solid`, content:`実線指定するCSS値。<br>border-style: ***;`},
{target:`#ccc`, content:`灰色 (#CCCCCC)のCSS値。<br>color: ***;`},
{target:`#FFF`, content:`白色 (#FFFFFF)のCSS値。<br>color: ***;`},
{target:`black`, content:`黒色 (#000000)のCSS値。<br>color: ***;`},
{target:`lightgray`, content:`明るい灰色 (#D3D3D3)のCSS値。<br>color: ***;`},
{target:`orange`, content:`オレンジ (#FFA500)のCSS値。<br>color: ***;`},
{target:`red`, content:`赤色 (#FF0000)のCSS値。<br>color: ***;`},
{target:`rgb`, content:`RGB色指定のCSS値。<br>color: ***(255, 0, 0);`},
{target:`skyblue`, content:`スカイブルー (#87CEEB)のCSS値。<br>color: ***;`},
{target:`white`, content:`白色 (#FFFFFF)のCSS値。<br>color: ***;`},
{target:`whitesmoke`, content:`ホワイトスモーク (#F5F5F5)のCSS値。<br>color: ***;`},
{target:`yellow`, content:`黄色 (#FFFF00)のCSS値。<br>color: ***;`},
{target:`yellowgreen`, content:`イエローグリーン (#9ACD32)のCSS値。<br>color: ***;`},
{target:`grid-column`, content:`グリッド列の中におけるグリッドアイテムの寸法と位置を指定し、線、区間、なし (自動) をグリッド配置に適用することで、グリッド領域の行の先頭と末尾の端を指定するCSSプロパティ。<br>***: 1 / 3;`},
{target:`grid-template-columns`, content:`グリッド列の線名とトラックのサイズ変更機能を定義するCSSプロパティ。<br>***: 120px 60px; → 1列目と2列目の幅が、それぞれ 120px、60pxに指定<br>***: 120px auto; → 1列目と2列目の幅が、それぞれ 120px、オートに指定`},
{target:`contain`, content:`ある要素とその内容が、できる限り多く、文書ツリーの他の部分から独立していることを示す。<br>これによってブラウザーがレイアウト、スタイル、描画、寸法、およびその組み合わせの再計算を、ページ全体ではなくDOMの限られた領域に対して行うことで、性能上の明らかな利点をもたらす。このプロパティはページ上にそれぞれ独立したたくさんのウィジェットがあるときに有益であり、ウィジェットの内部を、ウィジェットの囲みボックスの外側の副作用から守るために使用することができるCSSプロパティ。<br>***: paint;`},
{target:`pointer-events`, content:`特定のグラフィック要素がポインターイベントの対象になる可能性のある環境 (存在する場合) を設定するCSSプロパティ。<br>***: auto;`},
{target:`margin-block`, content:`論理的なブロックの先頭と末尾のマージンを設定するCSSプロパティ。<br>***: 10px 20px;`},
{target:`flex-basis`, content:`フレックスアイテムの主要部分の初期の寸法を設定。<br>box-sizingで設定していない限り、このプロパティはコンテンツボックスの寸法を定義するCSSプロパティ。<br>***: 50%;`},
{target:`font`, content:`フォント指定CSSプロパティ。<br>***: 16px/1.5 'Arial', sans-serif;`},
{target:`font-display`, content:`フォントの表示方法指定CSS記述子。<br>***: swap;`},
{target:`swap`, content:`フォントに対して非常に短いブロック時間の後、永続的にスワップ時間を置くCSS値。<br>font-display: ***;`},
{target:`sans-serif`, content:`サンセリフフォント指定のCSS値。<br>font-family: 'Helvetica', ***;`},
{target:`latin-ext`, content:`拡張ラテン文字指定のCSS値。<br>font-family: ***;`},
{target:`latin`, content:`ラテン文字指定のCSS値。<br>font-family: ***;`},
{target:`serif`, content:`セリフフォント指定のCSS値。<br>font-family: 'Times New Roman', ***;`},
{target:`Times`, content:`Times New Roman フォントのCSS値。<br>font-family: '***', serif;`},
{target:`font-style`, content:`フォントスタイル指定するCSSプロパティ。<br>***: italic;`},
{target:`font-weight`, content:`フォントの太さ (あるいは重み) を指定するCSSプロパティ。<br>***: 700;`},
{target:`vh`, content:`ビューポートの高さの割合指定するCSS値。<br>height: 50***;`},
{target:`margin-bottom`, content:`要素の下側のマージン領域を設定するCSSプロパティ。<br>***: 10px;`},
{target:`margin-left`, content:`要素の左側のマージン領域を設定するCSSプロパティ。<br>***: 2em;`},
{target:`margin-right`, content:`要素の右側のマージン領域を設定するCSSプロパティ。<br>***: 30px;`},
{target:`min-width`, content:`要素の最小幅を設定するCSSプロパティ。<br>***: 200px;`},
{target:`mix-blend-mode`, content:`要素の内容物と親要素の内容物や要素の背景をどのように混合するかを設定するCSSプロパティ。<br>***: overlay;`},
{target:`outline`, content:`輪郭線 (outline) に関する様々なプロパティを単一の宣言で設定するCSSプロパティ。<br>***: 2px solid #000;`},
{target:`overflow-wrap`, content:`インライン要素に対して、テキストが行ボックスをあふれないように、ブラウザーが分割できない文字列の途中で改行を入れるかどうかの設定するCSSプロパティ。<br>***: break-word;`},
{target:`word-break`, content:`改行しなければテキストがコンテンツボックスからあふれる場合に、ブラウザーが改行を挿入するかどうかを指定するCSSプロパティ。<br>***: break-word;`},
{target:`break-word`, content:`行内にその他の分割可能な位置がない場合、通常は分割可能でない単語が任意の場所で分割されるCSS値。<br>word-break: ***;`},
{target:`padding-bottom`, content:`要素のパディング領域における下側の高さを設定するCSSプロパティ。<br>***: 15px;`},
{target:`linear`, content:`等しい速度でアニメーションするCSS値。<br>transition:0.3s ***;`},
{target:`ease`, content:`アニメーションの中央に向けて変化量が増加し、最後に向けて減少するCSS値。<br>transition:0.3s ***;`},
{target:`ease-in`, content:`プロパティのアニメーションの変化の速度はゆっくり始まり、終了まで加速するCSS値。<br>transition:0.3s ***;`},
{target:`ease-out`, content:`アニメーションは速く始まり、速度を落としながら続くCSS値。<br>transition:0.3s ***;`},
{target:`ease-in-out`, content:`プロパティのアニメーションはゆっくり変化し、速度を上げ、また速度を落とすCSS値。<br>transition:0.3s ***;`},
{target:`smooth`, content:`アニメーションのスムーズ指定のCSS値。<br>transition:0.3s ***;`},
{target:`-webkit-text-stroke`, content:`テキスト文字の輪郭線の幅と色を指定するCSSプロパティ。<br>***: 2px black;`},
{target:`white-space`, content:`要素内のホワイトスペースをどのように扱うかを設定するCSSプロパティ。<br>***: nowrap;`},
{target:`nowrap`, content:`改行禁止するCSS値。<br>white-space: ***;`},
{target:`all`, content:`すべてのプロパティをリセットするCSSプロパティ。<br>***: initial;`},
{target:`font-face`, content:`カスタムフォントの指定するCSSアットルール。<br>@*** { ... }`},
{target:`unicode-range`, content:`@font-faceで定義されたフォントから使用される特定の文字範囲を設定し、現在のページで使用できるようにするCSS記述子。<br>***: U+26;<br>@font-face { ***: U+0025-00FF; }`},
{target:`keyframes`, content:`アニメーションの流れに沿ったキーフレーム（または中間地点）のスタイルを定義することによって、一連のCSSアニメーションの中間ステップを制御。<br>これにより、アニメーションの中間ステップをトランジションよりも詳細に制御するCSSアットルール。<br>@*** fadeIn { ... }<br><br>&lt;ul id='fade'&gt; → 3つの画像を順番に表示<br>&emsp;&lt;li&gt;&lt;img src='img1.jpg' alt=''&gt;&lt;/li&gt;<br>&emsp;&lt;li&gt;&lt;img src='img2.jpg' alt=''&gt;&lt;/li&gt;<br>&emsp;&lt;li&gt;&lt;img src='img3.jpg' alt=''&gt;&lt;/li&gt;<br>&lt;/ul&gt;<br>@*** fade {<br>&emsp;0% {opacity: 0;}<br>&emsp;15% {opacity: 1;}<br>&emsp;30% {opacity: 1;}<br>&emsp;45% {opacity: 0;}<br>&emsp;100% {opacity: 0}<br>}<br>#fade {animation: fade 15s infinite;}<br>#fade li:nth-child(1){animation-delay: 0s;}<br>#fade li:nth-child(2){animation-delay: 5s;}<br>#fade li:nth-child(2){animation-delay: 10s;}`},
{target:`animation`, content:`アニメーションを指定するCSSプロパティ。<br>***: 3s linear 1s infinite alternate slidein;`},
{target:`infinite`, content:`無限ループアニメーションするCSS値。<br>animation: spin 2s ***;`},
{target:`filter`, content:`ぼかしや色変化などのグラフィック効果を要素に適用するCSSプロパティ。<br>フィルターは画像、背景、境界の描画を調整するためによく使われる。blur()：ぼかし。brightness()：明るさ調整。100%以上で明るくなる。contrast()：コントラスト調整。100%以上で増加。grayscale()：グレイスケールに変換。100%完全グレー。drop-shadow()：影。opacity()：透過率。0%透明。sepia()：セピア調。100%完全セピア調。<br>***: grayscale(1) → 100%グレースケール<br>***: drop-shadow(1px 1px 10px #c0c0c0) → 影を設定`},
{target:`&lt;fieldset&gt;`, content:`フォーム内の関連要素のグルーピングする。<br>&lt;***&gt;<br>&emsp;&lt;legend&gt;Group&lt;/legend&gt;<br>&emsp;…<br>&lt;/***&gt;`},
{target:`&lt;legend&gt;`, content:`親要素である&lt;fieldset&gt;の内容のキャプションを表す要素。<br>&lt;fieldset&gt;<br>&emsp;&lt;***&gt;Group&lt;/***&gt;<br>&emsp;…<br>&lt;/fieldset&gt;`},
{target:`&lt;footer&gt;`, content:`フッター要素。<br>直近の区分コンテンツまたは区分化ルート要素のフッターを表す。フッターには通常、そのセクションの著者に関する情報、関連文書へのリンク、著作権情報等を含む。<br>&lt;***&gt;Copyright © 2023 abc def. All Rights Reserved.&lt;/***&gt;`},
{target:`&lt;section&gt;`, content:`文書の自立した一般的なセクション（区間）を表す。<br>そのセクションを表現するより意味的に具体的な要素がない場合に使用。少数の例外を除いて、セクションには見出しを置く。<br>&lt;***&gt;...&lt;/***&gt;`},
{target:`&lt;textarea&gt;`, content:`複数行のプレーンテキスト編集コントロールを表す。<br>レビューのコメントやお問い合わせフォーム等のように、ユーザーが大量の自由記述テキストを入力できる。<br>&lt;*** rows='4' cols='50'&gt;&lt;/***&gt;`},
{target:`autocomplete`, content:`入力欄にどの種類の情報が期待されているかをブラウザーに示唆することができる。<br>また、ユーザーエージェントがフォーム入力欄の値を埋めるための自動支援を提供する。<br>&lt;input type='text' ***='off'&gt;`},
{target:`autofocus`, content:`ページ読み込み時に要素にフォーカスする。<br>&lt;input type='text' ***&gt;`},
{target:`onclick`, content:`要素がクリックされたときに実行するスクリプトを指定。<br>&lt;button ***='myFunction()'&gt;Click me&lt;/button&gt;`},
{target:`spellcheck`, content:`スペルチェックの有効・無効。<br>&lt;textarea ***='false'&gt;&lt;/textarea&gt;`},
{target:`theme-color`, content:`ページやその周辺のユーザーインターフェイスの表示をカスタマイズするために使用すべき推奨色を示す。<br>&lt;meta name='***' content='#4285f4'&gt;`},
{target:`&lt;code&gt;`, content:`コンピューターコードの短い断片の文字列であると識別できるような外見のコンテンツを表示するHTML要素`},
{target:`images`, content:`現在のHTML文書のImage(en-US)のコレクションを返す。<br>var htmlCollection = document.***`},
{target:`&commat;charset`, content:`スタイルシートで使う文字エンコーディングを定義するCSSアットルール。<br>このルールはスタイルシートの最初の要素でなければならず、これより前には文字を一切記述してはいけない。<br>*** 'UTF-8';`},
{target:`&commat;media`, content:`1つまたは複数のメディアクエリーの結果に基づいて、スタイルシートの一部を適用するCSSアットルール。<br>「メディアタイプ」と「メディア特性」を指定することで、出力デバイスに応じてスタイルを適用したり、横幅に応じCSSを切り替えることができる。<br>*** screen and (max-width: 600px) {} → 画面サイズが小さいデバイス（例えばスマートフォン）に対し適切なスタイルへ切り替える`},
{target:`&commat;page`, content:`文書を印刷するときに一部のCSSプロパティを変更するために使用するCSSアットルール。<br>***{margin: 1cm;}`},
{target:`:hover`, content:`ユーザーがカーソル（マウスポインター）を要素の上にかざしたときのスタイル指定するCSS疑似クラス。<br>.joinBtn *** {background-color: bisque;}`},
{target:`:nth-of-type`, content:`兄弟要素のグループの中で指定された型 (タグ名) の要素を、位置に基づいて選択するCSS疑似クラス。<br>p ***(2) { color: blue; }`},
{target:`:nth-child`, content:`兄弟要素のグループの中での位置に基づいて選択するCSS疑似クラス。<br>li:***(2) {<br>&emsp;color: lime;<br>} → リストの2番目の子要素を選択`},
{target:`:first-child`, content:`兄弟要素のグループの中で最初の要素を表すCSSの疑似クラス。<br>li ***{<br>&emsp;color: lime;<br>} → リストの最初の子要素を選択`},
{target:`:last-child`, content:`兄弟要素のグループの中で最後の要素を表すCSSの疑似クラス。<br>li ***{<br>&emsp;color: lime;<br>} → リストの最後の子要素を選択`},
{target:`:first-of-type`, content:`兄弟要素のグループの中でその種類の最初の要素を表すCSS疑似クラス。<br>p ***{<br>&emsp;color: red;<br>}`},
{target:`::before`, content:`選択した要素の最初の子要素として擬似要素を生成。<br>よくcontentプロパティを使用して、要素に装飾的な内容を追加するために用いられる。<br>a *** {<br>&emsp;content: '♥';<br>} → リンクの前にハートマークを入れる`},
{target:`::after`, content:`選択した要素の最後の子要素として擬似要素を生成。<br>よくcontentプロパティを使用して、要素に装飾的な内容を追加するために用いられる。<br>a *** {<br>&emsp;content: '→';<br>} → リンクの後に矢印を追加`},
{target:`-webkit-`, content:`基本的にWebKitベースのブラウザーすべてをさすベンダープレフィックス（Chrome、Safariなど）。<br>ベンダープレフィックス付きのプロパティを使う場合は、ベンダープレフィックスが付いていないプロパティも併用して記述する。<br>#header {<br>&emsp;***justify-content: center;<br>&emsp;justify-content: center;<br>}`},
{target:`-moz-`, content:`Firefoxをさすベンダープレフィックス。<br>ベンダープレフィックス付きのプロパティを使う場合は、ベンダープレフィックスが付いていないプロパティも併用して記述する。<br>#header {<br>&emsp;***justify-content: center;<br>&emsp;justify-content: center;<br>}`},
{target:`-ms-`, content:`IE、Edgeをさすベンダープレフィックス。<br>ベンダープレフィックス付きのプロパティを使う場合は、ベンダープレフィックスが付いていないプロパティも併用して記述する。<br>#header {<br>&emsp;***justify-content: center;<br>&emsp;justify-content: center;<br>}`},
{target:`-o-`, content:`WebKit導入前の古いOperaのベンダープレフィックス。<br>ベンダープレフィックス付きのプロパティを使う場合は、ベンダープレフィックスが付いていないプロパティも併用して記述する。<br>#header {<br>&emsp;***justify-content: center;<br>&emsp;justify-content: center;<br>}`},
{target:`twitter-timeline`, content:`Twitterのタイムラインを埋め込むためのリンク。<br>class='***-***'は、このリンクがTwitterの埋め込みウィジェットであることを示す。data-height='315'は、埋め込まれたタイムラインの高さを指定。href='https://twitter.com/X?...'は、埋め込むTwitterアカウントのURLを示す。次の行にTwitterの埋め込みウィジェットを読み込むJavaScriptファイルへのリンクを指定する。<br>&lt;a class='***-***' data-height='315' href='https://twitter.com/X?ref_src=...'&gt;Tweets by X&lt;/a&gt;<br>&lt;script async src='https://platform.twitter.com/widgets.js' charset='utf-8'&gt;&lt;/script&gt;`},
{target:`jQuery`, content:`JavaScriptでよく使われるライブラリであり、HTML要素を操作したり、アニメーションを作成したり、Ajaxを使用してサーバーと通信したりするための簡潔な方法を提供。<br>&lt;script src='https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js'&gt;&lt;/script&gt; → ウェブページにJavaScriptライブラリを読み込む`},
]
